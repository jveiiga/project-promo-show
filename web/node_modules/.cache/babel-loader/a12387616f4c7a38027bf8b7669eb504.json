{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nconst initialRequestInfo = {\n  error: null,\n  data: null,\n  loading: false\n};\nexport default function useApi(config) {\n  _s();\n\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);\n\n  async function call() {\n    setRequestInfo({ ...initialRequestInfo,\n      loading: true\n    });\n\n    try {\n      const response = await axios(config);\n      setRequestInfo({ ...initialRequestInfo,\n        data: response.data\n      });\n    } catch (error) {\n      set;\n    }\n\n    if (config.onCompleted) {\n      config.onCompleted(response);\n    }\n  }\n\n  return [call, requestInfo];\n}\n\n_s(useApi, \"ulhzXS5tmU9BK4JEYC7Xe1mGEio=\");","map":{"version":3,"sources":["/Users/jefersonveiga/Documents/new-project/project-promo-show/web/src/components/utils/useApi.js"],"names":["useState","axios","initialRequestInfo","error","data","loading","useApi","config","requestInfo","setRequestInfo","call","response","set","onCompleted"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,KAAK,EAAE,IADgB;AAEvBC,EAAAA,IAAI,EAAE,IAFiB;AAGvBC,EAAAA,OAAO,EAAE;AAHc,CAA3B;AAMA,eAAe,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AAAA;;AACnC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACE,kBAAD,CAA9C;;AAEA,iBAAeQ,IAAf,GAAsB;AACpBD,IAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbG,MAAAA,OAAO,EAAE;AAFI,KAAD,CAAd;;AAKA,QAAI;AACA,YAAMM,QAAQ,GAAG,MAAMV,KAAK,CAACM,MAAD,CAA5B;AACAE,MAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbE,QAAAA,IAAI,EAAEO,QAAQ,CAACP;AAFF,OAAD,CAAd;AAIH,KAND,CAME,OAAOD,KAAP,EAAc;AACdS,MAAAA,GAAG;AACJ;;AAED,QAAIL,MAAM,CAACM,WAAX,EAAwB;AACtBN,MAAAA,MAAM,CAACM,WAAP,CAAmBF,QAAnB;AACD;AACF;;AAGD,SAAO,CACHD,IADG,EAEHF,WAFG,CAAP;AAIH;;GA7BuBF,M","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios';\n\nconst initialRequestInfo = {\n    error: null,\n    data: null,\n    loading: false,\n};\n\nexport default function useApi(config) {\n    const [requestInfo, setRequestInfo] = useState(initialRequestInfo)\n\n    async function call() {\n      setRequestInfo({\n        ...initialRequestInfo,\n        loading: true,\n      });\n\n      try {\n          const response = await axios(config);\n          setRequestInfo({\n            ...initialRequestInfo,\n            data: response.data,\n          });\n      } catch (error) {\n        set\n      }\n \n      if (config.onCompleted) {\n        config.onCompleted(response);\n      }\n    }\n\n\n    return [\n        call,\n        requestInfo\n    ]\n}"]},"metadata":{},"sourceType":"module"}