{"ast":null,"code":"var _jsxFileName = \"/Users/jefersonveiga/Documents/new-project/project-promo-show/web/src/components/Promotion/Modal/CommentsTree/CommentsTree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport './CommentsTree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getTree(list) {\n  if (!list) {\n    return [];\n  }\n\n  const roots = [];\n  const childrenByParentId = {};\n  list.forEach(item => {\n    if (!item.parentId) {\n      roots.push(item);\n      return;\n    }\n\n    if (!childrenByParentId[item.parentId]) {\n      childrenByParentId[item.parentId] = [];\n    }\n\n    childrenByParentId[item.parentId].push(item);\n  });\n\n  function buildNodes(nodes) {\n    if (!nodes) {\n      return null;\n    }\n\n    return nodes.map(node => ({ ...node,\n      children: buildNodes(childrenByParentId[node.id])\n    }));\n  }\n\n  return buildNodes(roots);\n}\n\nconst CommentsTree = ({\n  comments,\n  sendComment\n}) => {\n  _s();\n\n  const tree = useMemo(() => getTree(comments), [comments]);\n  const [comment, setComment] = useState(' ');\n  const [activeCommentBox, setActiveCommentBox] = useState(false);\n\n  if (!comments) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  function renderItem(item) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"promotion-modal-comments-tree__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.user.avatarUrl,\n        alt: `foto de ${item.user.name}`,\n        className: \"promotion-modal-comments-tree__item-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"promotion-modal-comments-tree__item-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"promotion-modal-comments-tree__item-name\",\n          children: item.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"promotion-modal-comments-tree__answer-button\",\n          onClick: () => {\n            setComment(\" \");\n            setActiveCommentBox(activeCommentBox === item.id ? null : item.id);\n          },\n          children: \"Responder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), activeCommentBox === item.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"promotion-modal-comments-tree__comment-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: comment,\n            onChange: ev => setComment(ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"promotion-modal-comments-tree__send-button\",\n            onClick: () => {\n              sendComment(comment, item.id);\n              setComment(\" \");\n              setActiveCommentBox(null);\n            },\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderList(list) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"promotion-modal-comments-tree\",\n      children: tree.map(renderItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this);\n  }\n\n  return renderList(tree);\n};\n\n_s(CommentsTree, \"iIQCrs1TUXgOJHZCGODB7yEkWDg=\");\n\n_c = CommentsTree;\nCommentsTree.defaultProps = {\n  sendComment: (comment, parentId) => {}\n};\nexport default CommentsTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsTree\");","map":{"version":3,"sources":["/Users/jefersonveiga/Documents/new-project/project-promo-show/web/src/components/Promotion/Modal/CommentsTree/CommentsTree.js"],"names":["React","useState","useMemo","getTree","list","roots","childrenByParentId","forEach","item","parentId","push","buildNodes","nodes","map","node","children","id","CommentsTree","comments","sendComment","tree","comment","setComment","activeCommentBox","setActiveCommentBox","renderItem","user","avatarUrl","name","ev","target","value","renderList","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport './CommentsTree.css';\n\nfunction getTree(list) {\n    if (!list) {\n      return [];\n  }\n  const roots = [];\n  const childrenByParentId = {};\n\n  list.forEach((item) => {\n    if (!item.parentId) {\n      roots.push(item);\n      return;\n    }\n\n    if (!childrenByParentId[item.parentId]) {\n      childrenByParentId[item.parentId] = [];\n    }\n\n    childrenByParentId[item.parentId].push(item);\n  });\n\n  function buildNodes(nodes) {\n    if (!nodes) {\n      return null;\n    }\n    return nodes.map((node) => ({\n      ...node,\n      children: buildNodes(childrenByParentId[node.id]) \n    }));\n  }\n\n  return buildNodes(roots);\n}\n\nconst CommentsTree = ({ comments, sendComment }) => {\n  const tree = useMemo(() => getTree(comments), [comments]);\n  const [comment, setComment] = useState(' ');\n  const [activeCommentBox, setActiveCommentBox] = useState(false);\n  if (!comments) {\n    return <div>Carregando...</div>;\n  }\n\n  function renderItem(item) {\n    return (\n      <li className=\"promotion-modal-comments-tree__item\">\n        <img\n          src={item.user.avatarUrl}\n          alt={`foto de ${item.user.name}`}\n          className=\"promotion-modal-comments-tree__item-avatar\"\n        />\n        <div className=\"promotion-modal-comments-tree__item-info\">\n          <span className=\"promotion-modal-comments-tree__item-name\">\n            {item.user.name}\n          </span>\n          <p>{item.comment}</p>\n          <button\n            type=\"button\"\n            className=\"promotion-modal-comments-tree__answer-button\"\n            onClick={() => {\n              setComment(\" \");\n              setActiveCommentBox(\n                activeCommentBox === item.id ? null : item.id\n              );\n            }}\n          >\n            Responder\n          </button>\n          {activeCommentBox === item.id && (\n            <div className=\"promotion-modal-comments-tree__comment-box\">\n              <textarea\n                value={comment}\n                onChange={(ev) => setComment(ev.target.value)}\n              />\n              <button\n                type=\"button\"\n                className=\"promotion-modal-comments-tree__send-button\"\n                onClick={() => {\n                  sendComment(comment, item.id);\n                  setComment(\" \");\n                  setActiveCommentBox(null);\n                }}\n              >\n                Enviar\n              </button>\n            </div>\n          )}\n          \n        </div>\n      </li>\n    );\n  }\n\n  function renderList(list) {\n    return (\n    <ul className=\"promotion-modal-comments-tree\">\n      {tree.map(renderItem)}\n    </ul>\n      \n    )\n  }\n\n  return renderList(tree);\n};\n\nCommentsTree.defaultProps = {\n  sendComment: (comment, parentId) => {   \n  }\n};\n\nexport default CommentsTree;"]},"metadata":{},"sourceType":"module"}