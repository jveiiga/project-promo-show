{"ast":null,"code":"var _jsxFileName = \"/Users/jefersonveiga/Documents/new-project/project-promo-show/web/src/components/UI/InfinitScroll/InfinitScroll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UIInfinityScroll = ({\n  fetchMore\n}) => {\n  _s();\n\n  const containerRef = useRef();\n  useEffect(() => {\n    const option = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 1.0\n    };\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        observer.disconnect();\n        fetchMore();\n      }\n    }, option);\n    observer.observe(containerRef.current);\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UIInfinityScroll, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n\n_c = UIInfinityScroll;\nexport default UIInfinityScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"UIInfinityScroll\");","map":{"version":3,"sources":["/Users/jefersonveiga/Documents/new-project/project-promo-show/web/src/components/UI/InfinitScroll/InfinitScroll.js"],"names":["React","useEffect","useRef","UIInfinityScroll","fetchMore","containerRef","option","root","rootMargin","threshold","observer","IntersectionObserver","entry","isIntersecting","disconnect","observe","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACxC,QAAMC,YAAY,GAAGH,MAAM,EAA3B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAf;AAKA,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,CAAC,CAAEC,KAAF,CAAD,KAAe;AACrD,UAAKA,KAAK,CAACC,cAAX,EAA2B;AACvBH,QAAAA,QAAQ,CAACI,UAAT;AACAV,QAAAA,SAAS;AACZ;AACJ,KALgB,EAKdE,MALc,CAAjB;AAMAI,IAAAA,QAAQ,CAACK,OAAT,CAAiBV,YAAY,CAACW,OAA9B;AAEA,WAAO,MAAM,CAEZ,CAFD;AAGH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBAAO;AAAK,IAAA,GAAG,EAAEX;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAtBD;;GAAMF,gB;;KAAAA,gB;AAwBN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nconst UIInfinityScroll = ({ fetchMore }) => {\n    const containerRef = useRef();\n    useEffect(() => {\n        const option = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 1.0,\n        }\n        const observer = new IntersectionObserver(([ entry ]) => {\n            if ( entry.isIntersecting) {\n                observer.disconnect();\n                fetchMore();\n            }\n        }, option)\n        observer.observe(containerRef.current)\n\n        return () => {\n            \n        }\n    }, [])\n\n    return <div ref={containerRef}/>\n}\n\nexport default UIInfinityScroll;"]},"metadata":{},"sourceType":"module"}